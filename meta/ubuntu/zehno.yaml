name: github-repo-clone
mmdebstrap:
  packages:
    - make
    - g++
    - python3-vcstool  # Added to provide vcs command
  customize-hooks:

    # Initialize rosdep without privileged operations
    - |
      chroot "$1" bash -c '
        mkdir -p /home/ubuntu/.ros/rosdep/sources.list.d
        echo "yaml https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/base.yaml" > /home/ubuntu/.ros/rosdep/sources.list.d/20-default.list
        echo "yaml https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/python.yaml" >> /home/ubuntu/.ros/rosdep/sources.list.d/20-default.list
        echo "yaml https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/ruby.yaml" >> /home/ubuntu/.ros/rosdep/sources.list.d/20-default.list
        export ROS_ETC_DIR=/home/ubuntu/.ros
        rosdep update'

    # Clone rmw_zenoh repository
    - |
      chroot "$1" bash -c '
        mkdir -p /home/ubuntu/zenoh_ws/src
        cd /home/ubuntu/zenoh_ws/src
        git clone -b jazzy https://github.com/ros2/rmw_zenoh.git'

    # Build ament_cmake_vendor_package from source
    - |
      chroot "$1" bash -c '
        mkdir -p /home/ubuntu/ament_ws/src
        git clone -b jazzy https://github.com/ament/ament_cmake /home/ubuntu/ament_ws/src/ament_cmake
        source /opt/ros/jazzy/setup.bash
        cd /home/ubuntu/ament_ws
        colcon build --packages-up-to ament_cmake_vendor_package
        source install/setup.bash'
    - |
      mkdir -p "$1/etc/NetworkManager/dispatcher.d"
      cat > "$1/etc/NetworkManager/dispatcher.d/90-zenoh-restart" << 'EOF'
      #!/bin/bash

      IFACE="$1"
      STATUS="$2"

      if [ "$IFACE" = "wlan0" ] && [ "$STATUS" = "up" ]; then
          logger "NetworkManager dispatcher: Restarting rmw_zenohd.service because $IFACE is up"
          systemctl restart rmw_zenohd.service
      fi
      EOF
      chmod 755 "$1/etc/NetworkManager/dispatcher.d/90-zenoh-restart"
    # Build rmw_zenoh with serial transport
    - |
      chroot "$1" bash -c '
        source /opt/ros/jazzy/setup.bash
        source /home/ubuntu/ament_ws/install/setup.bash
        cd /home/ubuntu/zenoh_ws
        rosdep install --from-paths src --ignore-src --rosdistro jazzy -y
        colcon build --cmake-args -DCMAKE_BUILD_TYPE=Release'

    # Download and configure router
    - |
      cp -a DEFAULT_RMW_ZENOH_ROUTER_CONFIG_pi5.json5 "$1/home/ubuntu/"   
      cp -a DEFAULT_RMW_ZENOH_ROUTER_CONFIG_pi4.json5 "$1/home/ubuntu/"

    - |
      cat >> "$1/home/ubuntu/.profile" << 'EOF'
      export RMW_IMPLEMENTATION=rmw_zenoh_cpp
      source /opt/ros/jazzy/setup.bash
      source /home/ubuntu/zenoh_ws/install/setup.bash
      EOF  

    # ===== Create wrapper script to pick correct config =====
    - |
      chroot "$1" bash -c 'cat <<EOF > /usr/local/bin/start-zenoh.sh
      #!/bin/bash
      if grep -iq "Raspberry Pi 5" /proc/device-tree/model; then
        export ZENOH_ROUTER_CONFIG_URI=/home/ubuntu/DEFAULT_RMW_ZENOH_ROUTER_CONFIG_pi5.json5
      elif grep -iq "Raspberry Pi 4" /proc/device-tree/model; then
        export ZENOH_ROUTER_CONFIG_URI=/home/ubuntu/DEFAULT_RMW_ZENOH_ROUTER_CONFIG_pi4.json5
      else
        export ZENOH_ROUTER_CONFIG_URI=/home/ubuntu/DEFAULT_RMW_ZENOH_ROUTER_CONFIG_pi4.json5
      fi
      export RMW_IMPLEMENTATION=rmw_zenoh_cpp
      source /opt/ros/jazzy/setup.bash
      source /home/ubuntu/zenoh_ws/install/setup.bash
      exec ros2 run rmw_zenoh_cpp rmw_zenohd
      EOF
      chmod +x /usr/local/bin/start-zenoh.sh
      '

      # Create systemd service to start rmw_zenohd at boot
    - |
      chroot "$1" bash -c 'cat <<EOF > /etc/systemd/system/rmw_zenohd.service
      [Unit]
      Description=Run rmw_zenohd on boot
      After=network.target

      [Service]
      Type=simple
      User=ubuntu
      Environment=HOME=/home/ubuntu
      WorkingDirectory=/home/ubuntu
      ExecStart=/usr/local/bin/start-zenoh.sh
      Restart=on-failure

      [Install]
      WantedBy=multi-user.target
      EOF
      systemctl daemon-reload
      systemctl enable rmw_zenohd.service
      '
