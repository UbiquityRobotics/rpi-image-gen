name: ubuntu-ros2-pi5
mmdebstrap:
  mode: unshare
  suite: noble
  target: rootfs
  mirrors:
    - deb http://archive.raspberrypi.com/debian bookworm main
    - http://ports.ubuntu.com/ubuntu-ports noble main restricted universe multiverse
    - http://ports.ubuntu.com/ubuntu-ports noble-updates main restricted universe multiverse
    - http://ports.ubuntu.com/ubuntu-ports noble-security main restricted universe multiverse
  keyrings:
    - /usr/share/keyrings/ubuntu-archive-keyring.gpg
  packages:
    - raspberrypi-archive-keyring
    - ubuntu-server
    - systemd
    - linux-raspi
    - rfkill
    - wpasupplicant
    - modemmanager
    - iw
    - wireless-regdb
    - systemd-timesyncd
    - cage
    - sudo
    - curl
    - locales
    - python3-setuptools
    - vim
    - nano
    - emacs
    - htop
    - screen
    - tmux
    - at
    - dosfstools
    - e2fsprogs
    - fdisk
    - minicom
    - git
    - python3-pip
    - ethtool
    - openssh-server
    - libnss-mdns
    - avahi-daemon
    - gnupg
    - patch
    - pollinate
    - software-properties-common
    - i2c-tools
    - net-tools
    - fake-hwclock
    - ssl-cert
    - console-setup
    - cloud-guest-utils  # Required for growpart
    - parted            # Partition management
  customize-hooks:
    - cp kernel/RPI4/linux-image-6.8.4-rt11-raspi_6.8.4-g75867ff0890f-1_arm64.deb $1/tmp/
    - cp kernel/RPI4/linux-headers-6.8.4-rt11-raspi_6.8.4-g75867ff0890f-1_arm64.deb $1/tmp/
    - cp kernel/RPI4/linux-libc-dev_6.8.4-g75867ff0890f-1_arm64.deb $1/tmp/

    # Remove default repository entries
    - sed -i '/^deb.*ubuntu.com/d' "$1/etc/apt/sources.list"
    - rm -f "$1/etc/apt/sources.list.d/"*.list  # Remove any default list files
  # Now add your custom repositories
    - |
      cat > "$1/etc/apt/sources.list" <<EOF
      deb http://ports.ubuntu.com/ubuntu-ports noble main restricted universe multiverse
      deb http://ports.ubuntu.com/ubuntu-ports noble-updates main restricted universe multiverse
      deb http://ports.ubuntu.com/ubuntu-ports noble-security main restricted universe multiverse
      EOF
    - printf 'ACTIVE_CONSOLES="/dev/tty[1-6]"\nCHARMAP="UTF-8"\nCODESET="guess"\nFONTFACE="TerminusBold"\nFONTSIZE="32x16"\n' > "$1/etc/default/console-setup"
    # ===== Custom Partition Resizing =====
    - |
      mkdir -p "$1/usr/local/sbin"
      cat > "$1/usr/local/sbin/resize-rootfs.sh" <<'EOF'
      #!/bin/bash
      set -e
      
      # Log function
      log() {
          echo "$(date): $1" | tee -a /var/log/resize-rootfs.log
      }
      
      log "Starting partition resize on first boot"
      
      # Detect root device and partition
      ROOT_DEV=$(findmnt -n -o SOURCE /)
      ROOT_DISK=${ROOT_DEV%p*}
      ROOT_PART_NUM=${ROOT_DEV##*p}
      
      log "Root device: $ROOT_DEV, Disk: $ROOT_DISK, Partition: $ROOT_PART_NUM"
      
      # Resize partition
      if ! growpart "$ROOT_DISK" "$ROOT_PART_NUM" 2>/dev/null; then
          log "Partition resize failed or not needed"
      else
          log "Partition resized successfully"
      fi
      
      # Resize filesystem
      if resize2fs "$ROOT_DEV" 2>/dev/null; then
          log "Filesystem resized successfully"
      else
          log "Filesystem resize failed"
      fi
      
      # Disable service after completion
      systemctl disable resize-rootfs.service
      log "Resize service disabled"
      EOF
      chmod +x "$1/usr/local/sbin/resize-rootfs.sh"

    - |
      cat > "$1/etc/systemd/system/resize-rootfs.service" <<'EOF'
      [Unit]
      Description=Resize root partition on first boot
      After=local-fs.target
      Before=multi-user.target
      ConditionPathExists=!/var/lib/resize-rootfs-done

      [Service]
      Type=oneshot
      ExecStart=/usr/local/sbin/resize-rootfs.sh
      ExecStartPost=/bin/touch /var/lib/resize-rootfs-done
      RemainAfterExit=true
      StandardOutput=journal+console
      StandardError=journal+console

      [Install]
      WantedBy=multi-user.target
      EOF

    - chroot "$1" systemctl enable resize-rootfs.service
